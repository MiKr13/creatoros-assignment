{"version":3,"sources":["components/GoogleButton.js","components/common/AppLogo.js","components/common/AppBar.js","components/common/ScrollButton.js","components/ProfileSection.js","components/common/Image.js","components/PeopleGrid.js","components/common/NavBar.js","components/common/TextImage.js","components/common/RightImageSection.js","components/App.js","theme.js","index.js"],"names":["GoogleButton","handleResponse","isLoggedIn","clientId","process","buttonText","onLogoutSuccess","onSuccess","onFailure","isSignedIn","useStyles","makeStyles","theme","root","fontWeight","content","lineHeight","border","position","top","borderTop","AppLogo","text","classes","Typography","id","variant","className","AppBar","Left","Center","Right","paddingTop","spacing","paddingBottom","Toolbar","Grid","container","item","xs","sm","md","ScrollButton","goingUp","scrollTarget","threshold","staticPlace","bottom","left","right","handleClick","event","anchor","target","ownerDocument","document","querySelector","scrollIntoView","behavior","block","trigger","useScrollTrigger","onClick","KeyboardArrowUp","aria-label","KeyboardArrowDown","Zoom","in","role","Fab","size","height","marginTop","marginBottom","large","width","avatar","padding","center","display","justifyContent","alignItems","ProfileSection","name","email","image","Container","maxWidth","Avatar","alt","src","Box","Image","propTypes","PropTypes","number","string","Images","style","tileBar","backgroundColor","fontSize","withWidth","people","GridList","cellHeight","isWidthUp","cols","gridList","map","person","index","GridListTile","img","title","GridListTileBar","subtitle","job","flexDirection","nestedRoot","fontStyle","link","color","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","NavBar","navLink","setActiveNav","activeNav","useState","mobileOpen","setMobileOpen","window","body","handleDrawerToggle","changeNav","preventDefault","location","href","el","Link","IconButton","edge","Drawer","open","onClose","paper","drawerPaper","ModalProps","keepMounted","drawerContainer","List","ListItem","button","ListItemText","primary","TextImage","heading","subheading","imageUrl","textAlign","palette","secondary","RightImageSection","App","googleId","profileInfo","changeProfileInfo","fixed","response","profileObj","createMuiTheme","main","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline"],"mappings":"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","file":"static/js/main.978a465c.chunk.js","sourcesContent":["import { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport PropTypes from 'prop-types';\n\nconst GoogleButton = ({ handleResponse, isLoggedIn }) => {\n    return (\n        <>\n            { !isLoggedIn ?\n                <GoogleLogin\n                    clientId={process.env.REACT_APP_GOOGLE_API_KEY}\n                    buttonText=\"Login with Google\"\n                    onSuccess={handleResponse}\n                    onFailure={handleResponse}\n                    isSignedIn={true}\n                ></GoogleLogin>\n                : <GoogleLogout\n                    clientId={process.env.REACT_APP_GOOGLE_API_KEY}\n                    buttonText=\"Logout\"\n                    onLogoutSuccess={handleResponse}\n                ></GoogleLogout>\n            }\n        </>\n    );\n};\n\nGoogleButton.propTypes = {\n    handleResponse: PropTypes.func,\n    isLoggedIn: PropTypes.bool,\n}\n\nexport default GoogleButton;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontWeight: 800,\n\n        '&::before': {\n            content: '\"-\"',\n            lineHeight: 0,\n            border: '10px black solid',\n            position: 'absolute',\n            top: 80,\n            borderTop: 'none',\n        }\n    },\n}));\n\nconst AppLogo = ({ text }) => {\n    const classes = useStyles();\n\n    return (\n        <Typography id=\"logo\" variant=\"h3\" className={classes.root} >{text}</Typography>\n    );\n}\n\nAppLogo.propTypes = {\n    text: PropTypes.string\n};\n\nexport default AppLogo;\n","import { Toolbar, Grid } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types'\n\nconst AppBar = ({ Left, Center, Right }) => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            paddingTop: theme.spacing(3),\n            paddingBottom: theme.spacing(3),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <Toolbar className={classes.root}>\n            <Grid container spacing={5}>\n                <Grid item xs={6} sm={6} md>\n                    {Left ? Left : null}\n                </Grid>\n                <Grid item xs={6} sm={6} md={5}>\n                    {Center ? Center : null}\n                </Grid>\n                <Grid item xs={12} sm={12} md>\n                    {Right ? Right : null}\n                </Grid>\n            </Grid>\n        </Toolbar>\n    );\n}\n\nAppBar.propTypes = {\n    Left: PropTypes.object,\n    Center: PropTypes.object,\n    Right: PropTypes.object,\n}\n\nexport default AppBar;\n","import { KeyboardArrowDown, KeyboardArrowUp } from \"@material-ui/icons\";\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport PropTypes from 'prop-types';\n\nconst ScrollButton = ({ goingUp, scrollTarget, spacing, threshold, staticPlace }) => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            position: staticPlace ? 'absolute' : 'fixed',\n            bottom: spacing ? theme.spacing(spacing.bottom) : 'unset',\n            top: spacing ? theme.spacing(spacing.top) : 'unset',\n            left: spacing ? theme.spacing(spacing.left) : 'unset',\n            right: spacing ? theme.spacing(spacing.right) : 'unset',\n        },\n    }));\n\n    const classes = useStyles();\n\n    const handleClick = (event) => {\n        const anchor = (event.target.ownerDocument || document).querySelector(scrollTarget);\n\n        if (anchor) {\n            anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        }\n    };\n\n    const trigger = useScrollTrigger({\n        threshold,\n    });\n\n    return (\n        <>\n            {staticPlace ?\n                <div onClick={handleClick} className={classes.root}>\n                    {goingUp ? <KeyboardArrowUp aria-label={`Scroll back to ${goingUp ? 'top' : 'bottom'}`} /> : <KeyboardArrowDown aria-label={`Scroll back to ${goingUp ? 'top' : 'bottom'}`} />}\n                </div>\n                :\n                <Zoom in={trigger}>\n                    <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n                        <Fab size=\"small\" aria-label={`Scroll back to ${goingUp ? 'top' : 'bottom'}`}>\n                            {goingUp ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n                        </Fab>\n                    </div>\n                </Zoom>\n            }\n        </>\n    );\n};\n\nScrollButton.propTypes = {\n    goingUp: PropTypes.bool.isRequired,\n    scrollTarget: PropTypes.string.isRequired,\n    spacing: PropTypes.object,\n    threshold: PropTypes.number.isRequired,\n    staticPlace: PropTypes.bool.isRequired\n};\n\nexport default ScrollButton;\n","\nimport { Typography, Container, Grid, Avatar, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ScrollButton from './common/ScrollButton';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%',\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(10)\n    },\n    large: {\n        width: theme.spacing(45),\n        height: theme.spacing(45),\n    },\n    avatar: {\n        padding: '20px 40px'\n    },\n    center: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n}));\n\nconst ProfileSection = ({ name, email, image, isLoggedIn }) => {\n\n    const classes = useStyles();\n\n    const spacing = {\n        bottom: 0,\n        top: 103,\n        left: 0,\n        right: 100,\n    }\n\n    return (\n        <Container maxWidth=\"lg\" className={classes.root} id=\"profile\">\n            <Grid container spacing={5}>\n                <Grid item xs={12}>\n                    {isLoggedIn ?\n                        <Grid container spacing={5} className={classes.avatar}>\n                            <Grid item xs={12} sm={12} md={4}>\n                                <Avatar alt={name} src={image} className={classes.large} />\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={8} className={classes.center}>\n                                <Typography variant=\"h2\">{name}</Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.center}>\n                                <Typography variant=\"h3\">{email}</Typography>\n                            </Grid>\n                        </Grid> :\n                        <Grid container spacing={5} className={classes.avatar}>\n                            <Grid item xs={12} sm={12} md={4}>\n                                <Avatar alt=\"random\" src=\"https://images.unsplash.com/photo-1607430761186-6b682f1ba4c4?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1868&q=80\" className={classes.large} />\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={8} className={classes.center}>\n                                <Typography variant=\"h2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam lectus nunc.</Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.center}>\n                                <Typography variant=\"h3\">Neque porro quisquam est qui dolorem ipsum quia dolor sit amet.</Typography>\n                            </Grid>\n                        </Grid>\n                    }\n                </Grid>\n                <Grid item xs={false}></Grid>\n            </Grid>\n            <Box display={{ xs: 'none', sm: 'none', md: 'block' }}>\n                <ScrollButton goingUp={false} scrollTarget=\"#horeca\" threshold={0} spacing={spacing} staticPlace={true} ></ScrollButton>\n            </Box>\n        </Container>\n    );\n}\n\nProfileSection.propTypes = {\n    name: PropTypes.string,\n    email: PropTypes.string,\n    image: PropTypes.string,\n    isLoggedIn: PropTypes.bool\n}\n\nexport default ProfileSection;\n","\nimport Image from 'material-ui-image';\nimport PropTypes from 'prop-types';\n\nconst Images = ({ src, alt, height, width }) => {\n    const style = {\n        height: height ? `${height} px` : 'auto',\n        width: width ? `${width} px` : 'auto',\n    }\n\n    return (\n        <Image style={style} src={src} alt={alt} />\n    );\n}\n\nImage.propTypes = {\n    height: PropTypes.number,\n    width: PropTypes.number,\n    alt: PropTypes.string,\n    src: PropTypes.string,\n}\n\nexport default Images;\n","import { Container, GridList, GridListTile, GridListTileBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport Image from './common/Image';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%',\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(10)\n    },\n    tileBar: {\n        backgroundColor: 'unset',\n        fontWeight: 'bolder',\n        fontSize: 'xx-large !important',\n    }\n}));\n\nconst PeopleGrid = ({ people, width }) => {\n    const classes = useStyles();\n\n    const getGridListCols = () => {\n        if (isWidthUp('xl', width)) {\n            return 3;\n        }\n\n        if (isWidthUp('lg', width)) {\n            return 2;\n        }\n\n        if (isWidthUp('md', width)) {\n            return 2;\n        }\n\n        return 1;\n    }\n\n    const getCellHeight = () => {\n        if (isWidthUp('lg', width)) {\n            return 400;\n        }\n\n        if (isWidthUp('md', width)) {\n            return 300;\n        }\n\n        return 200;\n    }\n\n    return (\n        <Container maxWidth=\"lg\" className={classes.root} id=\"profile\">\n            <GridList cellHeight={getCellHeight()} cols={getGridListCols()} spacing={20} className={classes.gridList}>\n                {people.map((person, index) => (\n                    <GridListTile key={index} cols={1}>\n                        <Image\n                            src={person.img}\n                            alt={person.title} />\n                        <GridListTileBar\n                            title={person.title}\n                            subtitle={<span>{person.job}</span>}\n                            className={classes.tileBar}\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </Container>\n    )\n};\n\nexport default withWidth()(PeopleGrid);\n","import { Grid, Link, Box, Toolbar, List, ListItem, ListItemText, Drawer, IconButton } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst drawerWidth = 340;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    nestedRoot: {\n        marginTop: \"15px\",\n        fontStyle: 'bold',\n    },\n    link: {\n        color: '#1c1c1c',\n        fontWeight: 'bold'\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nconst NavBar = ({ navLink, setActiveNav, activeNav }) => {\n    const [mobileOpen, setMobileOpen] = useState(false);\n\n    const container = window.document.body;\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const classes = useStyles();\n\n    const changeNav = (event, index) => {\n        event.preventDefault();\n        setActiveNav(index);\n        window.location.href = navLink[index].href;\n        const anchor = document.querySelector(navLink[index].href);\n        if (anchor) {\n            anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        }\n    }\n\n    return (\n        <>\n            <Box display={{ xs: 'none', sm: 'none', md: 'block' }}>\n                <Grid container spacing={1} className={classes.root}>\n                    {navLink.map((el, index) => (\n                        <Grid container item xs={3} spacing={5} key={index} className={classes.nestedRoot}>\n                            <Link onClick={(event) => changeNav(event, index)} className={`${classes.link} ${index === activeNav ? 'active' : ''}`} href={el.href} >\n                                {el.name}\n                            </Link>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Box>\n            <Box display={{ xs: 'block', sm: 'block', md: 'none' }}>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    edge=\"start\"\n                    onClick={handleDrawerToggle}\n                    className={classes.menuButton}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Drawer\n                    container={container}\n                    className={classes.drawer}\n                    variant=\"temporary\"\n                    anchor='right'\n                    open={mobileOpen}\n                    onClose={handleDrawerToggle}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                >\n                    <Toolbar />\n                    <div className={classes.drawerContainer}>\n                        <List>\n                            {navLink.map((el, index) => (\n                                <ListItem button key={index} href={el.href} onClick={(event) => changeNav(event, index)}>\n                                    <ListItemText primary={el.name} />\n                                </ListItem>\n                            ))}\n                        </List>\n                    </div>\n                </Drawer>\n            </Box>\n        </>\n    );\n}\n\nNavBar.propTypes = {\n    navLink: PropTypes.array,\n    setActiveNav: PropTypes.func,\n    activeNav: PropTypes.number\n}\n\nexport default NavBar;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Container } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Image from './Image';\n\n\nconst TextImage = ({ id, heading, subheading, imageUrl }) => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            height: '100%',\n            marginTop: theme.spacing(10),\n            marginBottom: theme.spacing(10)\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n        center: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            textAlign: 'left',\n            flexDirection: 'column'\n        }\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth=\"lg\" className={classes.root}>\n            <Grid id={id} container spacing={5}>\n                <Grid item xs={6} className={classes.center}>\n                    <Typography variant=\"h2\">{heading}</Typography>\n                    <Typography variant=\"h6\">{subheading}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Image\n                        src={imageUrl}\n                        alt={heading}\n                        height={80}\n                        width={80} />\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nTextImage.propTypes = {\n    id: PropTypes.string,\n    heading: PropTypes.string,\n    subheading: PropTypes.string,\n    imageUrl: PropTypes.string\n}\n\nexport default TextImage;\n","\nimport { Grid } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Image from './Image'\n\nconst RightImageSection = ({ id, src, alt, height, width }) => {\n\n    return (\n        <Grid id={id} container spacing={5}>\n            <Grid item md={5} xs={false}></Grid>\n            <Grid item md={7} xs={12}>\n                <Image alt={alt} src={src} height={height} width={width} />\n            </Grid>\n        </Grid>\n    );\n}\n\nRightImageSection.propTypes = {\n    height: PropTypes.number,\n    width: PropTypes.number,\n    alt: PropTypes.string,\n    src: PropTypes.string,\n    id: PropTypes.string,\n}\n\nexport default RightImageSection;\n","import React, { useState } from \"react\";\nimport { Container } from '@material-ui/core';\nimport GoogleButton from './GoogleButton'\nimport AppLogo from \"./common/AppLogo\";\nimport AppBar from './common/AppBar';\nimport ProfileSection from './ProfileSection';\nimport PeopleGrid from './PeopleGrid';\nimport NavBar from './common/NavBar'\nimport TextImage from './common/TextImage';\nimport RightImageSection from './common/RightImageSection';\nimport ScrollButton from './common/ScrollButton';\nimport \"../styles/styles.css\";\n\nconst people = [\n    {\n        img: \"https://images.unsplash.com/photo-1604864386572-a54278f83a49?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80\",\n        title: \"Jenny\",\n        job: \"something\"\n    },\n    {\n        img: \"https://images.unsplash.com/photo-1604864386572-a54278f83a49?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80\",\n        title: \"Jenny\",\n        job: \"something\"\n    },\n    {\n        img: \"https://images.unsplash.com/photo-1604864386572-a54278f83a49?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80\",\n        title: \"Jenny\",\n        job: \"something\"\n    },\n    {\n        img: \"https://images.unsplash.com/photo-1604864386572-a54278f83a49?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80\",\n        title: \"Jenny\",\n        job: \"something\"\n    },\n    {\n        img: \"https://images.unsplash.com/photo-1604864386572-a54278f83a49?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80\",\n        title: \"Jenny\",\n        job: \"something\"\n    },\n    {\n        img: \"https://images.unsplash.com/photo-1604864386572-a54278f83a49?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80\",\n        title: \"Jenny\",\n        job: \"something\"\n    }\n]\n\nconst navLink = [\n    {\n        name: 'profile',\n        href: '#profile'\n    },\n    {\n        name: 'horeca',\n        href: '#horeca'\n    },\n    {\n        name: 'retail',\n        href: '#retail'\n    },\n    {\n        name: 'over ons',\n        href: '#over-ons'\n    }\n];\n\nconst App = () => {\n    const [activeNav, setActiveNav] = useState(0); //NOTE: to track active nav link\n\n    const [profileInfo, changeProfileInfo] = useState({\n        googleId: '',\n        name: '',\n        image: '',\n        email: ''\n    }); //NOTE: to track google oauth data\n\n    const handleResponse = (response) => { //NOTE: to handle google oauth login response\n        if (response) {\n            changeProfileInfo({\n                googleId: response.profileObj.googleId,\n                name: response.profileObj.name,\n                image: response.profileObj.imageUrl,\n                email: response.profileObj.email\n            });\n        } else {\n            changeProfileInfo({\n                googleId: '',\n                name: '',\n                image: '',\n                email: ''\n            });\n        }\n    };\n\n    return (\n        <Container className=\"App\" maxWidth={false} fixed>\n            <AppBar\n                Left={<AppLogo text='open devs' />}\n                Center={<NavBar navLink={navLink} setActiveNav={setActiveNav} activeNav={activeNav} />}\n                Right={<GoogleButton isLoggedIn={profileInfo.googleId ? true : false} handleResponse={handleResponse} />}\n            />\n            <ProfileSection isLoggedIn={profileInfo.googleId ? true : false} name={profileInfo.name} image={profileInfo.image} email={profileInfo.email} />\n            <RightImageSection id=\"horeca\" src=\"https://images.unsplash.com/photo-1604864386572-a54278f83a49?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80\" alt=\"random\" height={55} width={90} />\n            <TextImage id=\"retail\" heading=\"lorem ipsum ipsum loremm lorem ipsum\" subheading=\"lorem ipsum ipsum loremm lorem ipsum lorem ipsum ipsum loremm lorem ipsum lorem ipsum ipsum loremm lorem ipsum\" imageUrl=\"https://cdn.jpegmini.com/user/images/slider_puffin_before_mobile.jpg\" />\n            <RightImageSection id=\"over-ons\" src=\"https://images.unsplash.com/photo-1604864386572-a54278f83a49?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80\" alt=\"random\" height={55} width={90} />\n            <ScrollButton goingUp={true} staticPlace={false} scrollTarget=\"#logo\" threshold={100} />\n            <PeopleGrid people={people} />\n        </Container>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from \"./components/App\";\nimport theme from './theme';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n    </ThemeProvider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}